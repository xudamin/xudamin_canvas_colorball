var Game = Class.extend({	init: function(paramsJSON){		this.canvas = document.getElementById(paramsJSON.canvasId);		this.canvas.width = window.innerWidth;		this.canvas.height = window.innerHeight;		this.ctx = this.canvas.getContext('2d');		this.date = 0;		this.posX = this.canvas.width/2;		this.posY = this.canvas.height/2;		this.ballArr = [];		this.setupRaf();		this.bindMouseEvent();		this.bindResizeEvent();		this.run();	},	run: function(){		this.loop();	},	loop: function(){		requestAnimationFrame(this.loop.bind(this));		var nowDate = new Date().getTime();		if(this.posX!=0||this.posY!=0&&(nowDate-this.date)>1000){			for(var i = 0;i<2;i++){				this.ballArr.push(new Ball({					posX: this.posX,					posY: this.posY,					controller: this				}));			}		}		this.ctx.globalCompositeOperation = 'destination-in';		this.ctx.fillStyle = 'hsla(0, 0%, 0%, .01)';		this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);		this.ctx.globalCompositeOperation = 'lighter';		for(var i= 0, len=this.ballArr.length;i<len;i++){			if(this.ballArr[i]){				if(this.ballArr[i].isNeedDestroy){					this.ballArr.splice(i,1);				}else{					this.ballArr[i].update();					this.ballArr[i].render();				}			}		}	},	setupRaf: function(){		var lastTime = 0;		var vendors = ['ms', 'moz', 'webkit', 'o'];		for (var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {			window.requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];			window.cancelAnimationFrame = window[vendors[x] + 'CancelAnimationFrame'] || window[vendors[x] + 'CancelRequestAnimationFrame'];		}		if (!window.requestAnimationFrame) {			window.requestAnimationFrame = function (callback, element) {				var currTime = new Date().getTime();				var timeToCall = Math.max(0, 16 - (currTime - lastTime));				var id = window.setTimeout(function () {					callback(currTime + timeToCall);				}, timeToCall);				lastTime = currTime + timeToCall;				return id;			};		}		if (!window.cancelAnimationFrame) {			window.cancelAnimationFrame = function (id) {				clearTimeout(id);			};		}	},	bindMouseEvent: function(){		var that = this;		this.canvas.addEventListener('mousemove',function(event){			that.posX = event.offsetX;			that.posY = event.offsetY;			for(var i = 0;i<2;i++){				that.ballArr.push(new Ball({					posX: event.offsetX,					posY: event.offsetY,					controller: that				}));			}		});	},	bindResizeEvent: function(){		var that = this;		window.onresize = function(){			that.canvas.width = window.innerWidth;			that.canvas.height = window.innerHeight;		}	}});